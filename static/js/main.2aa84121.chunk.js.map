{"version":3,"sources":["todo-context.js","components/todo-form/todo-form.jsx","components/checkbox/checkbox.jsx","components/todo-list/todo-list.jsx","components/todo-results/todo-results.jsx","components/header/header.jsx","app.jsx","index.jsx"],"names":["TodosContext","createContext","todosTemplate","id","label","checked","TodoContextProvider","props","React","useState","lsTodos","localStorage","getItem","JSON","parse","todos","setTodos","useEffect","setItem","stringify","Provider","value","removeTodo","filter","todo","addTodos","task","checkTodo","map","children","TodoForm","setTask","handleAddTodo","e","length","className","placeholder","onChange","target","onKeyUp","keyCode","type","onClick","Checkbox","onDelete","tabIndex","role","aria-checked","TodoList","toggleCheck","todoItem","handleKeyUp","TodoResults","count","i","calculateChecked","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aa84121.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\n\nexport const TodosContext = createContext();\n\nconst todosTemplate = [\n  {\n    id: 0,\n    label: \"Fix an ability to display all tasks\",\n    checked: false,\n  },\n  {\n    id: 1,\n    label: \"Fix a layout, checkboxes should be listed in a column\",\n    checked: false,\n  },\n  {\n    id: 2,\n    label: \"Fix an ability to add a new task\",\n    checked: false,\n  },\n  {\n    id: 3,\n    label: \"Fix an ability to toggle a task\",\n    checked: false,\n  },\n  {\n    id: 4,\n    label: \"Fix an ability to delete a task\",\n    checked: false,\n  },\n  {\n    id: 5,\n    label: \"Fix an ability to count completed tasks\",\n    checked: false,\n  },\n];\n\nconst TodoContextProvider = (props) => {\n  const [todos, setTodos] = React.useState(() => {\n    const lsTodos = localStorage.getItem(\"todos\");\n    // console.log(lsTodos);\n    if (!lsTodos) {\n      return todosTemplate;\n    } else if (lsTodos) {\n      return JSON.parse(lsTodos);\n    }\n  });\n\n  const addTodos = (task) => {\n    setTodos([...todos, task]);\n  };\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const checkTodo = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            checked: !todo.checked,\n          };\n        }\n\n        return todo;\n      })\n    );\n  };\n\n  // set local storage\n  React.useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <TodosContext.Provider\n      value={{ removeTodo, addTodos, checkTodo, localStorage, todos }}\n    >\n      {props.children}\n    </TodosContext.Provider>\n  );\n};\n\nexport default TodoContextProvider;\n","import * as React from 'react';\nimport { TodosContext } from '../../todo-context';\nimport './todo-form.scss';\n\nexport const TodoForm = () => {\n  const { todos, addTodos } = React.useContext(TodosContext);\n  const [task, setTask] = React.useState('');\n\n  const handleAddTodo = (e) => {\n    addTodos({\n      id: todos.length,\n      label: task, \n      checked: false,\n    });\n    // clears out the input\n    setTask('')\n\n  };\n\n  const handleKeyUp = (e) => {\n    // keycode 13 is enter button\n    if (e.keyCode === 13) {\n      handleAddTodo();\n    }\n  };\n\n  return (\n    <div className=\"todo-form\">\n      <input\n        placeholder=\"Enter new task\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        onKeyUp={handleKeyUp}\n      />\n      <button type=\"button\" onClick={handleAddTodo}>\n        Add task\n      </button>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport './checkbox.scss';\n\nexport const Checkbox = ({\n onClick, checked, onDelete, label, onKeyUp,\n}) => (\n  <div className=\"checkbox\">\n    <div\n      tabIndex=\"0\"\n      role=\"checkbox\"\n      aria-checked\n      className=\"checkbox-content\"\n      onClick={onClick}\n      onKeyUp={onKeyUp}\n    >\n      <input tabIndex=\"-1\" type=\"checkbox\" checked={checked} onChange={onClick} />\n      <span className={checked ? 'checkbox-checked' : ''}>{label}</span>\n    </div>\n    <button type=\"button\" className=\"checkbox-delete\" onClick={onDelete}>\n      x\n    </button>\n  </div>\n);\n","import * as React from 'react';\nimport { Checkbox } from '../checkbox';\nimport { TodosContext } from '../../todo-context';\nimport './todo-list.scss';\n\nexport const TodoList = () => {\n  const { todos, removeTodo, checkTodo} = React.useContext(TodosContext);\n\n  const handleDelete = (id) => {\n    removeTodo(id);\n  };\n\n  const toggleCheck = (id) => {\n    checkTodo(id);\n  };\n  \n\n  const handleKeyUp = (e, id) => {\n    if (e.keyCode === 13) {\n      toggleCheck(id);\n    }\n  };\n\n  return (\n    <div className=\"todo-list\">\n      <span className=\"todo-list-title\">Todos:</span>\n      {todos.length ? \n      (<div className=\"todo-list-content\">\n          {todos.map((todoItem) => (\n            <Checkbox\n              key={todoItem.id}\n              label={todoItem.label}\n              checked={todoItem.checked}\n              onClick={(e) => toggleCheck(todoItem.id)}\n              onKeyUp={(e) => handleKeyUp(e, todoItem.id)}\n              onDelete={() => handleDelete(todoItem.id)}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className=\"no-todos\">Looks like you&apos;re absolutely free today!</div>\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport './todo-results.scss';\nimport { TodosContext } from '../../todo-context';\n\nexport const TodoResults = () => {\n  const { todos} = React.useContext(TodosContext);\n  let count = 0\n  \n  const calculateChecked = () => {\n    if(todos){\n    for (let i = 0; i < todos.length; i++) {\n      if(todos[i].checked === true){\n        count++;\n      }\n    }\n    }\n\n    return count;\n  };\n\n  return (\n    <div className=\"todo-results\">\n      Done:\n      {calculateChecked()}\n    </div>\n  );\n};\n","import * as React from 'react';\n// import { TodosContext } from '../../todo-context';\nimport './header.scss';\n\nexport const Header = () => {\n  \n\n  return (\n    <header className=\"header\">\n     <h1>My Check List</h1>\n    </header>\n  );\n};\n","import * as React from 'react';\nimport { TodoForm } from './components/todo-form';\nimport { TodoList } from './components/todo-list';\nimport { TodoResults } from './components/todo-results';\nimport {Header} from './components/header/header'\n// import { TodosContext} from './todo-context';\nimport TodoContextProvider from './todo-context';\nimport './index.scss';\n\nexport const todosTemplate = [\n  {\n    id: 0,\n    label: 'Fix an ability to display all tasks',\n    checked: false,\n  },\n  {\n    id: 1,\n    label: 'Fix a layout, checkboxes should be listed in a column',\n    checked: false,\n  },\n  {\n    id: 2,\n    label: 'Fix an ability to add a new task',\n    checked: false,\n  },\n  {\n    id: 3,\n    label: 'Fix an ability to toggle a task',\n    checked: false,\n  },\n  {\n    id: 4,\n    label: 'Fix an ability to delete a task',\n    checked: false,\n  },\n  {\n    id: 5,\n    label: 'Fix an ability to count completed tasks',\n    checked: false,\n  },\n];\n\nexport const App = () => {\n  return (\n    <div className=\"root\">\n      <TodoContextProvider>\n        <Header/>\n        <TodoList />\n        <TodoResults />\n        <TodoForm />\n      </TodoContextProvider>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}